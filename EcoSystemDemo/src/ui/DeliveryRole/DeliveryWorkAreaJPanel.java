/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.DeliveryRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Orders.Orders;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author abhishek <your.name at your.org>
 */
public class DeliveryWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form DeliveryWorkAreaJPanel
     */
    private Enterprise enterprise;
    private JPanel userProcessContainer;
    private Organization organization;
    private EcoSystem business;
    private UserAccount account;
    private ArrayList<Orders> deliverOrdersList;
    public DeliveryWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, Organization organization, Enterprise enterprise, EcoSystem business) {
        initComponents();
        this.business = business;
        this.enterprise = enterprise;
        this.organization = organization;
        this.account = account;
        this.deliverOrdersList = enterprise.getDeliveryOrderList();
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
        // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
        private void initComponents() {

                enterpriseLabel = new javax.swing.JLabel();
                valueLabel = new javax.swing.JLabel();
                jScrollPane1 = new javax.swing.JScrollPane();
                orderJTable = new javax.swing.JTable();
                btnRefresh = new javax.swing.JButton();
                btnOrderPicked = new javax.swing.JButton();
                btnDelivered = new javax.swing.JButton();
                jLabel1 = new javax.swing.JLabel();

                setBackground(new java.awt.Color(255, 255, 255));
                setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

                enterpriseLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
                enterpriseLabel.setForeground(new java.awt.Color(0, 102, 204));
                enterpriseLabel.setText("Hi");
                add(enterpriseLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, -1));

                valueLabel.setForeground(new java.awt.Color(0, 102, 204));
                valueLabel.setText("<value>");
                add(valueLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, -1, -1));

                orderJTable.setForeground(new java.awt.Color(0, 102, 204));
                orderJTable.setModel(new javax.swing.table.DefaultTableModel(
                        new Object [][] {

                        },
                        new String [] {
                                "OrderID", "Customer Name", "Delivery Address", "Order Amount", "Order Status"
                        }
                ) {
                        Class[] types = new Class [] {
                                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class
                        };
                        boolean[] canEdit = new boolean [] {
                                false, false, false, false, false
                        };

                        public Class getColumnClass(int columnIndex) {
                                return types [columnIndex];
                        }

                        public boolean isCellEditable(int rowIndex, int columnIndex) {
                                return canEdit [columnIndex];
                        }
                });
                jScrollPane1.setViewportView(orderJTable);

                add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, 674, 120));

                btnRefresh.setBackground(new java.awt.Color(0, 102, 204));
                btnRefresh.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
                btnRefresh.setForeground(new java.awt.Color(255, 255, 255));
                btnRefresh.setText("Refresh");
                btnRefresh.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                btnRefreshActionPerformed(evt);
                        }
                });
                add(btnRefresh, new org.netbeans.lib.awtextra.AbsoluteConstraints(141, 206, -1, -1));

                btnOrderPicked.setBackground(new java.awt.Color(0, 102, 204));
                btnOrderPicked.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
                btnOrderPicked.setForeground(new java.awt.Color(255, 255, 255));
                btnOrderPicked.setText("Order Picked");
                btnOrderPicked.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                btnOrderPickedActionPerformed(evt);
                        }
                });
                add(btnOrderPicked, new org.netbeans.lib.awtextra.AbsoluteConstraints(262, 206, 116, -1));

                btnDelivered.setBackground(new java.awt.Color(0, 102, 204));
                btnDelivered.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
                btnDelivered.setForeground(new java.awt.Color(255, 255, 255));
                btnDelivered.setText("Delivered");
                btnDelivered.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                btnDeliveredActionPerformed(evt);
                        }
                });
                add(btnDelivered, new org.netbeans.lib.awtextra.AbsoluteConstraints(404, 206, -1, -1));

                jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ui/Icons/delivery (2).png"))); // NOI18N
                add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 270, 550, 130));
        }// </editor-fold>//GEN-END:initComponents

        private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
            populateTable();
        }//GEN-LAST:event_btnRefreshActionPerformed

        private void btnOrderPickedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOrderPickedActionPerformed
            int selectedOrderRow = orderJTable.getSelectedRow();
            if(selectedOrderRow<0){
                JOptionPane.showMessageDialog(null,"Select an order","Warning",JOptionPane.WARNING_MESSAGE);
            }
            int orderID = (int) orderJTable.getValueAt(selectedOrderRow, 0);
            for(Orders o : deliverOrdersList){
                if(o.getOrderID() == orderID){
                    o.setStatus("En Route");
		    JOptionPane.showMessageDialog(jScrollPane1, "Status updated to En Route");
                }
            }
            populateTable();
        }//GEN-LAST:event_btnOrderPickedActionPerformed

    private void btnDeliveredActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeliveredActionPerformed
        // TODO add your handling code here:
        int selectedOrderRow = orderJTable.getSelectedRow();
        if(selectedOrderRow<0){
            JOptionPane.showMessageDialog(null,"Select an order","Warning",JOptionPane.WARNING_MESSAGE);
        }
        int orderID = (int) orderJTable.getValueAt(selectedOrderRow, 0);
        for(Orders o : deliverOrdersList){
            if(o.getOrderID() == orderID){
                o.setStatus("Delivered");
		JOptionPane.showMessageDialog(jScrollPane1, "Status updated to En Delivered");
            }
        }
        populateTable();
    }//GEN-LAST:event_btnDeliveredActionPerformed


        // Variables declaration - do not modify//GEN-BEGIN:variables
        private javax.swing.JButton btnDelivered;
        private javax.swing.JButton btnOrderPicked;
        private javax.swing.JButton btnRefresh;
        private javax.swing.JLabel enterpriseLabel;
        private javax.swing.JLabel jLabel1;
        private javax.swing.JScrollPane jScrollPane1;
        private javax.swing.JTable orderJTable;
        private javax.swing.JLabel valueLabel;
        // End of variables declaration//GEN-END:variables

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) orderJTable.getModel();
        model.setRowCount(0);
        for(Orders o : deliverOrdersList){
            Object[] row = new Object[5]; 
            row[0] = o.getOrderID();
            row[1] = o.getCustomerName();
            row[2] = o.getCustomerAddress();
            row[3] = o.getTotalprice();
            row[4] = o.getStatus();
            model.addRow(row);
        }
    }
}
