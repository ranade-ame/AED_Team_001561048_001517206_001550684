/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.SystemAdminWorkArea;
import Business.Customer.Customer;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import java.awt.BorderLayout;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Component;
import javax.swing.JPanel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PiePlot3D;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.DefaultPieDataset;

/**
 *
 * @author bidar
 */
public class ViewStatisticJPanel extends javax.swing.JPanel {

	/**
	 * Creates new form ViewStatisticJPanel
        */
       private JPanel userProcessContainer;
        private EcoSystem ecosystem;
       public ViewStatisticJPanel(JPanel userProcessContainer, EcoSystem ecosystem) {
            initComponents();
            this.userProcessContainer = userProcessContainer;
            this.ecosystem = ecosystem;
       }

	/**
	 * This method is called from within the constructor to initialize the
	 * form. WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBack = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnNetworkData = new javax.swing.JButton();
        btnEnterpriseData = new javax.swing.JButton();
        btnCustomerData = new javax.swing.JButton();
        btnOrderData = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        btnBack.setBackground(new java.awt.Color(255, 255, 255));
        btnBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ui/Icons/93634-2.png"))); // NOI18N
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 102, 255));
        jLabel1.setText("Select label from below to view statistics");

        btnNetworkData.setText("Network Data");
        btnNetworkData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNetworkDataActionPerformed(evt);
            }
        });

        btnEnterpriseData.setText("Enterprise Data");
        btnEnterpriseData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnterpriseDataActionPerformed(evt);
            }
        });

        btnCustomerData.setText("Customer Data");
        btnCustomerData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCustomerDataActionPerformed(evt);
            }
        });

        btnOrderData.setText("Orders Data");
        btnOrderData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOrderDataActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(101, 101, 101)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(187, 187, 187)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnEnterpriseData, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnNetworkData, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnCustomerData, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnOrderData, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(182, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnNetworkData))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(btnEnterpriseData)
                .addGap(18, 18, 18)
                .addComponent(btnCustomerData)
                .addGap(18, 18, 18)
                .addComponent(btnOrderData)
                .addContainerGap(275, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnNetworkDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNetworkDataActionPerformed
        // TODO add your handling code here:
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        for(Network n : ecosystem.getNetworkList()){
            dataset.setValue(n.getEnterpriseDirectory().getEnterpriseList().size(), "Number of Enterprises", n.getName());
        }

        JFreeChart chart = ChartFactory.createBarChart("Networks", "Enterprises", "Number", dataset, PlotOrientation.VERTICAL, false, true, false);
        CategoryPlot p = chart.getCategoryPlot();
        p.setRangeGridlinePaint(Color.black);
        ChartFrame frame = new ChartFrame("Bar Chart", chart);
        frame.setVisible(true);
        frame.setSize(1000, 1000);
    }//GEN-LAST:event_btnNetworkDataActionPerformed

    private void btnEnterpriseDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnterpriseDataActionPerformed
        // TODO add your handling code here:
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        for(Network n : ecosystem.getNetworkList()){
            for(Enterprise e : n.getEnterpriseDirectory().getEnterpriseList())

            dataset.setValue(e.getOrganizationDirectory().getOrganizationList().size(), "Number of Organizations",String.valueOf(e.getZipcode()));
        }

        JFreeChart chart = ChartFactory.createBarChart("Enterprises", "Organizations", "Number", dataset, PlotOrientation.VERTICAL, false, true, false);
        CategoryPlot p = chart.getCategoryPlot();
        p.setRangeGridlinePaint(Color.black);
        ChartFrame frame = new ChartFrame("Bar Chart", chart);
        frame.setVisible(true);
        frame.setSize(1000, 1000);
    }//GEN-LAST:event_btnEnterpriseDataActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        SystemAdminWorkAreaJPanel sysAdminwjp = (SystemAdminWorkAreaJPanel) component;
        sysAdminwjp.populateTree();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnCustomerDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCustomerDataActionPerformed
        // TODO add your handling code here:
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        for(Network n : ecosystem.getNetworkList()){
            int customercounter = 0;
            for(Enterprise e : n.getEnterpriseDirectory().getEnterpriseList()){
                for(Customer c : ecosystem.getCustomerdirectory().getCustomerDir()){
                    if(c.getZipcode() == e.getZipcode()){
                        customercounter++;
                    }
                }
                dataset.setValue(customercounter, "Number of Customers", String.valueOf(e.getZipcode()));
            }
        }

        JFreeChart chart = ChartFactory.createBarChart("Enterprises", "Customers", "Number", dataset, PlotOrientation.VERTICAL, false, true, false);
        CategoryPlot p = chart.getCategoryPlot();
        p.setRangeGridlinePaint(Color.black);
        ChartFrame frame = new ChartFrame("Bar Chart", chart);
        frame.setVisible(true);
        frame.setSize(1000, 1000);
    }//GEN-LAST:event_btnCustomerDataActionPerformed

    private void btnOrderDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOrderDataActionPerformed
        // TODO add your handling code here:
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        for(Network n : ecosystem.getNetworkList()){
            int ordercounter = 0;
            for(Enterprise e : n.getEnterpriseDirectory().getEnterpriseList()){
                for(Customer c : ecosystem.getCustomerdirectory().getCustomerDir()){
                    if(c.getZipcode() == e.getZipcode()){
                        if(c.getOrderslist() != null){
                            ordercounter = ordercounter + c.getOrderslist().size();
                        }
                    }
                }
                dataset.setValue(ordercounter, "Number of Customers", String.valueOf(e.getZipcode()));
            }
        }

        JFreeChart chart = ChartFactory.createBarChart("Enterprises", "Customers", "Number", dataset, PlotOrientation.VERTICAL, false, true, false);
        CategoryPlot p = chart.getCategoryPlot();
        p.setRangeGridlinePaint(Color.black);
        ChartFrame frame = new ChartFrame("Bar Chart", chart);
        frame.setVisible(true);
        frame.setSize(1000, 1000);
    }//GEN-LAST:event_btnOrderDataActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCustomerData;
    private javax.swing.JButton btnEnterpriseData;
    private javax.swing.JButton btnNetworkData;
    private javax.swing.JButton btnOrderData;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
