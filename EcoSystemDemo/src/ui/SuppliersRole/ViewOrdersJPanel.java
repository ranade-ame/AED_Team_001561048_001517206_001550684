/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.SuppliersRole;

import Business.Enterprise.Enterprise;
import Business.ItemCatalogue.Items;
import Business.ItemCatalogue.ItemsDirectory;
import Business.Orders.Orders;
import Business.Organization.Organization;
import Business.Organization.OrganizationDirectory;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author bidar
 */
public class ViewOrdersJPanel extends javax.swing.JPanel {

	/**
	 * Creates new form ViewOrdersJPanel
	 */
	private Enterprise enterprise;
        private JPanel userProcessContainer;
        private Organization organization;
        private ItemsDirectory itemsdir;
        private ArrayList<Orders> orders;
        private OrganizationDirectory orgdir;
        
	public ViewOrdersJPanel(JPanel userProcessContainer, Organization organization, Enterprise enterprise, ItemsDirectory itemsdir) {
		initComponents();
            this.userProcessContainer = userProcessContainer;
            this.enterprise = enterprise;
            this.organization = organization;
            this.orgdir = enterprise.getOrganizationDirectory();
            this.orders = organization.getOrders();
            this.itemsdir = itemsdir;
	    populateTable();
            populateTransportTable();
            for(Organization o : orgdir.getOrganizationList()){
                if(o.getType().equals("Transport")){
                    System.out.println("Organization Name : " + o.getName());
                    System.out.println("Organization Type : " + o.getType());
                }
            }
	}

	/**
	 * This method is called from within the constructor to initialize the
	 * form. WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnback = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        orderJTable = new javax.swing.JTable();
        btnAssignTransport = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        transportJTable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        btnback.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ui/Icons/93634-2.png"))); // NOI18N
        btnback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbackActionPerformed(evt);
            }
        });

        orderJTable.setForeground(new java.awt.Color(0, 102, 204));
        orderJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Order ID", "Store Name", "Item Name", "Quantity", "Description", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, true, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(orderJTable);

        btnAssignTransport.setBackground(new java.awt.Color(0, 102, 204));
        btnAssignTransport.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        btnAssignTransport.setText("Assign to Transport Service");
        btnAssignTransport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignTransportActionPerformed(evt);
            }
        });

        jLabel1.setForeground(new java.awt.Color(0, 102, 204));
        jLabel1.setText("Total Amount");

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        transportJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Name", "Email Address", "Phone", "User Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(transportJTable);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ui/Icons/file_light-07-512-2.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnback, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAssignTransport)
                        .addGap(77, 77, 77)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 659, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnback, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(78, 78, 78)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnAssignTransport))
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(132, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

        private void btnbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbackActionPerformed
                // TODO add your handling code here:
		Component[] componentArray = userProcessContainer.getComponents();
            Component component = componentArray[componentArray.length - 1];
//            CustomerWorkAreaJPanel custAreajp = (CustomerWorkAreaJPanel) component;
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.previous(userProcessContainer);
        }//GEN-LAST:event_btnbackActionPerformed

    private void btnAssignTransportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignTransportActionPerformed
        // TODO add your handling code here:
        int selectedOrderRow = orderJTable.getSelectedRow();
        if(selectedOrderRow<0){
            JOptionPane.showMessageDialog(null,"Select an order","Warning",JOptionPane.WARNING_MESSAGE);
        }

        int selectedDeliveryRow = transportJTable.getSelectedRow();
        if(selectedDeliveryRow<0){
            JOptionPane.showMessageDialog(null,"Select a deliveryman","Warning",JOptionPane.WARNING_MESSAGE);
        }
        int orderID = (int) orderJTable.getValueAt(selectedOrderRow, 0);
        Orders order = null;

        for(Orders o : organization.getOrders()){
            if(o.getOrderID() == orderID){
                order = o;
            }
        }
        System.out.println("Order ID :" + order.getOrderID());

        String username = (String) transportJTable.getValueAt(selectedDeliveryRow, 3);
        for(Organization org : orgdir.getOrganizationList()){
            if(org.getType().equals("Transport")){
                for(UserAccount ua : org.getUserAccountDirectory().getUserAccountList()){
                    if(ua.getUsername().equalsIgnoreCase(username)){
                        order.setStatus("Assigned");
                        order.setDeliveryManName(org.getName());
                        order.setDeliveryPhone(org.getPhone());
                        if(enterprise.getInventoryOrderList() != null){
                            enterprise.getInventoryOrderList().add(order);
                        }
                        else{
                            enterprise.newInvetoryOrdersList();
                            enterprise.getInventoryOrderList().add(order);
                            for(Orders o1 : enterprise.getInventoryOrderList()){
                                System.out.println("Order ID:" + o1.getOrderID());
                                System.out.println("Order Contents :\n");
                                for(Items i: o1.getOrderlist()){
                                    System.out.println("Item Name :" + i.getName());
                                }
                            }
                        }
                    }
                }
            }
        }
    }//GEN-LAST:event_btnAssignTransportActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAssignTransport;
    private javax.swing.JButton btnback;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTable orderJTable;
    private javax.swing.JTable transportJTable;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) orderJTable.getModel();
        model.setRowCount(0);
        for(Orders o : orders){
            for(Items i : o.getOrderlist()){
                Object[] row = new Object[5];
                row[0] = enterprise.getName();
                row[1] = i.getName();
                row[2] = i.getQuantity();
                row[3] = i.getDesc();
                row[4] = i.getPrice();
                model.addRow(row);
            }
        }
    }

    private void populateTransportTable() {
        DefaultTableModel model = (DefaultTableModel) transportJTable.getModel();
        model.setRowCount(0);
        for(Organization o : orgdir.getOrganizationList()){
            if(o.getType().equals("Transport")){
                for(UserAccount ua : o.getUserAccountDirectory().getUserAccountList()){
                    Object[] row = new Object[4]; 
                    row[0] = o.getName();
                    row[1] = o.getEmail();
                    row[2] = o.getPhone();
                    row[3] = ua.getUsername();
                    model.addRow(row);   
                }
            }
        }
    }
}
