/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.AdministrativeRole;

import Business.Enterprise.Enterprise;
import Business.ItemCatalogue.Items;
import Business.ItemCatalogue.ItemsDirectory;
import Business.Orders.Orders;
import Business.Organization.Organization;
import Business.Organization.OrganizationDirectory;
import java.awt.CardLayout;
import static java.lang.Integer.parseInt;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author bidar
 */
public class ManageSuppliesJPanel extends javax.swing.JPanel {

	/**
	 * Creates new form ManageSuppliesJPanel
	 */
    private Enterprise enterprise;
    private JPanel userProcessContainer;
    private Organization organization;
    private OrganizationDirectory orgdir;
    private ItemsDirectory itemsdir;
    private Orders order;
    private ArrayList<Items> orderItems = new ArrayList<Items>();
    private ArrayList<Orders> orderplaced = new ArrayList<Orders>();
    public ManageSuppliesJPanel(JPanel userProcessContainer, Enterprise enterprise) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        this.orgdir = enterprise.getOrganizationDirectory();
        System.out.println("Enterprise Name :" + enterprise.getName());
        System.out.println("Enterprise Type :" + enterprise.getEnterpriseType().getValue());
        populateOrgCombo();
        populateItemsTable();
        populateCartTable();
    }

	/**
	 * This method is called from within the constructor to initialize the
	 * form. WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
        // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
        private void initComponents() {

                enterpriseLabel = new javax.swing.JLabel();
                jScrollPane3 = new javax.swing.JScrollPane();
                cartJTable = new javax.swing.JTable();
                btnAddtoCart = new javax.swing.JButton();
                btnRemovefromCart = new javax.swing.JButton();
                enterpriseLabel2 = new javax.swing.JLabel();
                backJButton = new javax.swing.JButton();
                btnConfirmOrder = new javax.swing.JButton();
                jLabel1 = new javax.swing.JLabel();
                jLabel2 = new javax.swing.JLabel();
                tfTotalPrice = new javax.swing.JTextField();
                jLabel3 = new javax.swing.JLabel();
                organizationJComboBox = new javax.swing.JComboBox<>();
                jScrollPane5 = new javax.swing.JScrollPane();
                menuJTable = new javax.swing.JTable();
                tfOrgType = new javax.swing.JTextField();

                setBackground(new java.awt.Color(255, 255, 255));

                enterpriseLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
                enterpriseLabel.setForeground(new java.awt.Color(0, 102, 204));
                enterpriseLabel.setText("Available Items");

                cartJTable.setModel(new javax.swing.table.DefaultTableModel(
                        new Object [][] {

                        },
                        new String [] {
                                "Item Name", "Quantity", "Description", "Price"
                        }
                ) {
                        boolean[] canEdit = new boolean [] {
                                false, false, false, false
                        };

                        public boolean isCellEditable(int rowIndex, int columnIndex) {
                                return canEdit [columnIndex];
                        }
                });
                jScrollPane3.setViewportView(cartJTable);

                btnAddtoCart.setBackground(new java.awt.Color(0, 102, 204));
                btnAddtoCart.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
                btnAddtoCart.setForeground(new java.awt.Color(255, 255, 255));
                btnAddtoCart.setText("Add Item to Cart");
                btnAddtoCart.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                btnAddtoCartActionPerformed(evt);
                        }
                });

                btnRemovefromCart.setBackground(new java.awt.Color(255, 255, 255));
                btnRemovefromCart.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
                btnRemovefromCart.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ui/Icons/delete-1432400-1211078-2.png"))); // NOI18N
                btnRemovefromCart.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                btnRemovefromCartActionPerformed(evt);
                        }
                });

                enterpriseLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
                enterpriseLabel2.setForeground(new java.awt.Color(0, 102, 204));
                enterpriseLabel2.setText("Cart Details");

                backJButton.setBackground(new java.awt.Color(255, 255, 255));
                backJButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ui/Icons/93634-2.png"))); // NOI18N
                backJButton.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                backJButtonActionPerformed(evt);
                        }
                });

                btnConfirmOrder.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ui/Icons/file_light-07-512-2.png"))); // NOI18N
                btnConfirmOrder.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                btnConfirmOrderActionPerformed(evt);
                        }
                });

                jLabel1.setForeground(new java.awt.Color(0, 102, 204));
                jLabel1.setText("Select Organization");

                jLabel2.setForeground(new java.awt.Color(0, 102, 204));
                jLabel2.setText("Total Amount");

                jLabel3.setForeground(new java.awt.Color(0, 102, 204));
                jLabel3.setText("Organization Type");

                organizationJComboBox.setBackground(new java.awt.Color(0, 102, 204));
                organizationJComboBox.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
                organizationJComboBox.setForeground(new java.awt.Color(255, 255, 255));
                organizationJComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Organization 1", "Organization 2", "Organization 3", "Organization 4" }));
                organizationJComboBox.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                organizationJComboBoxActionPerformed(evt);
                        }
                });

                menuJTable.setModel(new javax.swing.table.DefaultTableModel(
                        new Object [][] {

                        },
                        new String [] {
                                "Item Name", "Quantity", "Description", "Price"
                        }
                ) {
                        boolean[] canEdit = new boolean [] {
                                false, false, false, true
                        };

                        public boolean isCellEditable(int rowIndex, int columnIndex) {
                                return canEdit [columnIndex];
                        }
                });
                jScrollPane5.setViewportView(menuJTable);

                tfOrgType.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                tfOrgTypeActionPerformed(evt);
                        }
                });

                javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
                this.setLayout(layout);
                layout.setHorizontalGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 601, Short.MAX_VALUE)
                                        .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(btnRemovefromCart, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(btnConfirmOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addComponent(jLabel2)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                .addComponent(tfTotalPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addGap(194, 194, 194)
                                                                .addComponent(btnAddtoCart, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addGap(10, 10, 10)
                                                                .addComponent(enterpriseLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addContainerGap()
                                                                .addComponent(enterpriseLabel))
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addContainerGap()
                                                                .addComponent(backJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addGap(38, 38, 38)
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                                .addGap(24, 24, 24)
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                        .addComponent(organizationJComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                        .addComponent(tfOrgType))))
                                                .addGap(0, 0, Short.MAX_VALUE)))
                                .addContainerGap())
                );
                layout.setVerticalGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jLabel1)
                                                        .addComponent(organizationJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(14, 14, 14)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jLabel3)
                                                        .addComponent(tfOrgType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addComponent(backJButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(enterpriseLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnAddtoCart)
                                .addGap(36, 36, 36)
                                .addComponent(enterpriseLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jLabel2)
                                                        .addComponent(tfTotalPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(btnConfirmOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(btnRemovefromCart, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                );
        }// </editor-fold>//GEN-END:initComponents

        private void btnAddtoCartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddtoCartActionPerformed
            // TODO add your handling code here:
            int selectedMenuRow = menuJTable.getSelectedRow();
            if(selectedMenuRow<0){
                JOptionPane.showMessageDialog(null,"Select a row","Warning",JOptionPane.WARNING_MESSAGE);
            }
            Items item = itemsdir.getItem(menuJTable.getValueAt(selectedMenuRow, 0).toString());
            orderItems.add(item);
	    JOptionPane.showMessageDialog(cartJTable, "Item added to the cart");
            populateCartTable();
        }//GEN-LAST:event_btnAddtoCartActionPerformed

        private void btnRemovefromCartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemovefromCartActionPerformed
            // TODO add your handling code here:
            int selectedCartRow = cartJTable.getSelectedRow();
            if(selectedCartRow<0){
                JOptionPane.showMessageDialog(null,"Select a row","Warning",JOptionPane.WARNING_MESSAGE);
            }
            Items item = itemsdir.getItem(menuJTable.getValueAt(selectedCartRow, 0).toString());
            orderItems.remove(item);
	    JOptionPane.showMessageDialog(cartJTable, "Item deleted from the cart");
            populateCartTable();
        }//GEN-LAST:event_btnRemovefromCartActionPerformed

        private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
            userProcessContainer.remove(this);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.previous(userProcessContainer);
        }//GEN-LAST:event_backJButtonActionPerformed

        private void btnConfirmOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmOrderActionPerformed
            int total = 0;
            for(Items i : orderItems){
                total = total + parseInt(i.getPrice());
            }
            tfTotalPrice.setText(String.valueOf(total));
            order = new Orders(organization.getName(), enterprise.getName(), orderItems, total, enterprise.getStreetaddress(), organization.getStreetaddress());
            orderplaced.add(order);
            organization.getOrders().add(order);
	    JOptionPane.showMessageDialog(cartJTable, "Order Placed successfully");
        }//GEN-LAST:event_btnConfirmOrderActionPerformed

    private void organizationJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_organizationJComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_organizationJComboBoxActionPerformed

    private void tfOrgTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfOrgTypeActionPerformed
        // TODO add your handling code here:
        tfOrgType.setText(organization.getType()); 
    }//GEN-LAST:event_tfOrgTypeActionPerformed


        // Variables declaration - do not modify//GEN-BEGIN:variables
        private javax.swing.JButton backJButton;
        private javax.swing.JButton btnAddtoCart;
        private javax.swing.JButton btnConfirmOrder;
        private javax.swing.JButton btnRemovefromCart;
        private javax.swing.JTable cartJTable;
        private javax.swing.JLabel enterpriseLabel;
        private javax.swing.JLabel enterpriseLabel2;
        private javax.swing.JLabel jLabel1;
        private javax.swing.JLabel jLabel2;
        private javax.swing.JLabel jLabel3;
        private javax.swing.JScrollPane jScrollPane3;
        private javax.swing.JScrollPane jScrollPane5;
        private javax.swing.JTable menuJTable;
        private javax.swing.JComboBox<String> organizationJComboBox;
        private javax.swing.JTextField tfOrgType;
        private javax.swing.JTextField tfTotalPrice;
        // End of variables declaration//GEN-END:variables

    private void populateOrgCombo() {
        organizationJComboBox.removeAllItems();
        for(Organization o : orgdir.getOrganizationList()){
            if(enterprise.getEnterpriseType().getValue().equalsIgnoreCase("Eateries")){
                if(o.getType().equalsIgnoreCase("Wholesale")){
                    organizationJComboBox.addItem(o.getName());
                }
            }
            else if(enterprise.getEnterpriseType().getValue().equalsIgnoreCase("Essentials")){
                if(o.getType().equalsIgnoreCase("Suppliers")){
                    organizationJComboBox.addItem(o.getName());
                }
            }
            else if(enterprise.getEnterpriseType().getValue().equalsIgnoreCase("Retail")){
                if(o.getType().equalsIgnoreCase("Vendors")){
                    organizationJComboBox.addItem(o.getName());
                }
            }
        }
        String name = (String) organizationJComboBox.getSelectedItem();
        for(Organization o : orgdir.getOrganizationList()){
            if(o.getName().equalsIgnoreCase(name)){
                organization = o;
                itemsdir = organization.getItemsDirectory();
                tfOrgType.setText(organization.getType()); 
            }
        }
    }

    private void populateItemsTable() {
        
        DefaultTableModel model = (DefaultTableModel) menuJTable.getModel();
        model.setRowCount(0);
        for(Items i : itemsdir.getItemsList()){
            Object[] row = new Object[4];
            row[0] = i.getName();
            row[1] = i.getDesc();
            row[2] = i.getPrice();
            row[3] = i.getQuantity();
            model.addRow(row);
        }
    }

    private void populateCartTable() {
        //cartJTable
        DefaultTableModel model = (DefaultTableModel) cartJTable.getModel();
        model.setRowCount(0);
        for(Items i : orderItems){
            Object[] row = new Object[4];
            row[0] = i.getName();
            row[1] = i.getQuantity();
            row[2] = i.getDesc();
            row[3] = i.getPrice();
            
            model.addRow(row);
        }
    }
}
